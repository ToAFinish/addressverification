{!REQUIRESCRIPT("/soap/ajax/49.0/connection.js")} 
{!REQUIRESCRIPT("/soap/ajax/49.0/apex.js")} 
{!REQUIRESCRIPT("/support/console/49.0/integration.js")}
var SesId = '{!GETSESSIONID()}';
var sObjectFields =sforce.apex.execute("CreateEditPageController", "getsObjectField", {sObjectName : 'Account'});
var sObjFields =JSON.parse(sObjectFields);
console.log(JSON.stringify(JSON.parse(sObjectFields)));

var result;
var ObjectName = 'Account';
var layoutId = '';
var rtName = '';
// TO BE USED ONLY IF RECORD TYPES ARE SET UP FOR ACCOUNTS
// var rtName = '{!Account.RecordType}';
var address = '';
var flag = 0;
var divNum = 0;
if (rtName == null || rtName == '') {
    rtName = 'Standard';
}
var rtPName = rtName.replace(/ /g, "");
rtPName = rtPName.replace (/\//g, "_");
var pageName = 'AV_' + ObjectName + '_' + rtPName;
if(pageName.length>40)
pageName=pageName.substring(0,40);

var rtId;
if (rtName == 'Standard') {
    rtId = 'Master';
} else {
    rtId = rtName;
}
var recordTID = '';
var count = 0;
var pgId = '';
var qr = sforce.connection.query("SELECT Id, name FROM ApexPage where name = '" + pageName + "' limit 1");
records = qr.getArray("records");
if (records.length == 1) {
    for (var i = 0; i < records.length; i++) {
        var record = records[i];
        pgId = record.Id;
    }
}
result = sforce.connection.describeLayout(ObjectName, null, null);
var objectDescribeData = '';
objectDescribeData = sforce.connection.describeSObject(ObjectName);
var recordTypeMapping = result.getArray("recordTypeMappings");
for (var i = 0; i < recordTypeMapping.length; i++) {
    var rectId = recordTypeMapping[i].name;
    if (rtId == rectId) {
        //recordTID = recordTypeMapping[i].recordTypeId; 
        layoutId = recordTypeMapping[i].layoutId;
        console.log('###: ' + recordTypeMapping[i].recordTypeId);
        console.log('###: ' + recordTypeMapping[i].layoutId);
    }
}
//Retreiving layout 
var layoutActivity = result.getArray("layouts");
console.log('layoutActivity : ' + layoutActivity);
for (var i = 0; i < layoutActivity.length; i++) {
    console.log('Id: ' + layoutActivity[i].id); // get ID 
    if (layoutActivity[i].id == layoutId) {
        var body = '';
        body = '\\n\\t\\t<apex:pageBlock title=\'' + ObjectName + ' Edit\' mode=\'edit\' id=\'pb1\'>';
        body += '\\n\\t\\t\\t<apex:pageBlockButtons location=\'top\' id=\'pbb1\'>\\n\\t\\t\\t\\t<apex:commandButton value=\'Save\' id=\'svBtn\' onclick=\'validate(event,false);return false;\'/>\\n\\t\\t\\t\\t<apex:commandButton value=\'Save & New\' onclick=\'validate(event,true);return false;\'/>\\n\\t\\t\\t\\t<apex:commandButton value=\'Cancel\' action=\'\{\!cancel}\' />\\n\\t\\t\\t</apex:pageBlockButtons>\\n\\t\\t\\t<div id=\'errorDiv\' style=\'color:#c00;display:none;font-weight:bold\'><center>Error: Invalid Data. <br/>Review all error messages below to correct your data.</center></div>';
        //Retrieving Edit section 
        var detailLayoutSection = layoutActivity[i].getArray("editLayoutSections");
        for (var j = 0; j < detailLayoutSection.length; j++) {
            if (j == detailLayoutSection.length - 1) {
                if (detailLayoutSection[j].heading == 'Address Information') {
                    body += '\\n\\t\\t</apex:pageBlock>\\n\\t</apex:form>\\n\\t<smartystreets:EditAccountComponent id=\'pgComp\' pageControlle=\'\{\!pageCont}\'/>\\n\\t<apex:form ></apex:form>\\n\\t<apex:form>\\n\\t\\t<apex:pageBlock mode=\'edit\'>'
                    body += '\\n\\t\\t\\t<apex:pageBlockButtons location=\'bottom\'>\\n\\t\\t\\t\\t<apex:commandButton value=\'Save\' id=\'svBtn\' onclick=\'validate(event,false);return false;\'/>\\n\\t\\t\\t\\t<apex:commandButton value=\'Save & New\' onclick=\'validate(event,true);return false;\'/>\\n\\t\\t\\t\\t<apex:commandButton value=\'Cancel\' action=\'\{\!cancel}\' />\\n\\t\\t\\t</apex:pageBlockButtons>';
					
					//New logic to handle Address Information Section
					//Getting the rows of Layout 
					var layoutRows = detailLayoutSection[j].getArray("layoutRows");
					console.log('section: ' + layoutRows);
					for (var k = 0; k < layoutRows.length; k++) {
						//Getting items inside rows 
						var layoutItems = layoutRows[k].getArray("layoutItems");
						for (var l = 0; l < layoutItems.length; l++) {
							//Getting the layout components inside layoutItems 
							var layoutComponents = layoutItems[l].getArray("layoutComponents");
							for (var m = 0; m < layoutComponents.length; m++) {
								//Getting fields of Layout Components 
								for (var n = 0; n < sObjFields.length; n++) {
									var field = sObjFields[n];
									if (field.name == layoutComponents[m].value) {
										if (layoutComponents[m].value != 'BillingAddress' && layoutComponents[m].value != 'ShippingAddress') {
											count = 1;
										} else {
											if (layoutComponents[m].value == 'BillingAddress') {
												address += 'BA';
												flag++;
											}
											if (layoutComponents[m].value == 'ShippingAddress') {
												address += 'SA';
												flag++;
											}
										}
									}
								}
							}
						}
					}
					// End
					if (flag == 2) {
						address = 'BS';
					}
                    break;
                }
            }
            if (detailLayoutSection[j].heading == 'Address Information') {
                body += '\\n\\t\\t</apex:pageBlock>\\n\\t</apex:form>\\n\\t<smartystreets:EditAccountComponent id=\'pgComp\' pageControlle=\'\{\!pageCont}\'/>\\n\\t<apex:form ></apex:form>\\n\\t<apex:form>\\n\\t\\t<apex:pageBlock mode=\'edit\'>'
                body += '\\n\\t\\t\\t<apex:pageBlockButtons location=\'bottom\'>\\n\\t\\t\\t\\t<apex:commandButton value=\'Save\' id=\'svBtn\' onclick=\'validate(event,false);return false;\'/>\\n\\t\\t\\t\\t<apex:commandButton value=\'Save & New\' onclick=\'validate(event,true);return false;\'/>\\n\\t\\t\\t\\t<apex:commandButton value=\'Cancel\' action=\'\{\!cancel}\' />\\n\\t\\t\\t</apex:pageBlockButtons>';
                //New logic to handle Address Information Section
                //Getting the rows of Layout 
                var layoutRows = detailLayoutSection[j].getArray("layoutRows");
                console.log('section: ' + layoutRows);
                for (var k = 0; k < layoutRows.length; k++) {
                    //Getting items inside rows 
                    var layoutItems = layoutRows[k].getArray("layoutItems");
                    for (var l = 0; l < layoutItems.length; l++) {
                        //Getting the layout components inside layoutItems 
                        var layoutComponents = layoutItems[l].getArray("layoutComponents");
                        for (var m = 0; m < layoutComponents.length; m++) {
                            //Getting fields of Layout Components 
                            for (var n = 0; n < sObjFields.length; n++) {
                                var field = sObjFields[n];
                                if (field.name == layoutComponents[m].value) {
                                    if (layoutComponents[m].value != 'BillingAddress' && layoutComponents[m].value != 'ShippingAddress') {
                                        count = 1;
                                    } else {
                                        if (layoutComponents[m].value == 'BillingAddress') {
                                            address += 'BA';
                                            flag++;
                                        }
                                        if (layoutComponents[m].value == 'ShippingAddress') {
                                            address += 'SA';
                                            flag++;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                // End
            }
            if (flag == 2) {
                address = 'BS';
            }
            if ((detailLayoutSection[j].heading == 'Address Information' && count == 1) || (detailLayoutSection[j].heading != 'Address Information')) {
                body += '\\n\\t\\t\\t<apex:pageBlockSection title=\'' + detailLayoutSection[j].heading + '\' columns=\'' + detailLayoutSection[j].columns + '\'>';
                //Getting the rows of Layout 
                var layoutRows = detailLayoutSection[j].getArray("layoutRows");
                console.log('section: ' + layoutRows);
                for (var k = 0; k < layoutRows.length; k++) {
                    //Getting items inside rows 
                    var layoutItems = layoutRows[k].getArray("layoutItems");
                    for (var l = 0; l < layoutItems.length; l++) {
                        if (layoutItems[l].placeholder == 'true') {
                            body += '\\n\\t\\t\\t\\t<apex:pageBlockSectionItem></apex:pageBlockSectionItem>';
                        }
                        //Getting the layout components inside layoutItems 
                        var layoutComponents = layoutItems[l].getArray("layoutComponents");
                        for (var m = 0; m < layoutComponents.length; m++) {
							if(layoutComponents[m].type=='EmptySpace'){
								body += '\\n\\t\\t\\t\\t<apex:pageBlockSectionItem></apex:pageBlockSectionItem>';
							}
                            //Getting fields of Layout Components 
                            for (var n = 0; n < sObjFields.length; n++) {
                                var field = sObjFields[n];
                                if (field.name == layoutComponents[m].value) {
                                    if (layoutComponents[m].value != 'BillingAddress' && layoutComponents[m].value != 'ShippingAddress') {
										if(field.type=='textarea' && field.htmlFormatted){ 
											body += '\\n\\t\\t\\t\\t<apex:pageBlockSectionItem></apex:pageBlockSectionItem>';
										} else {
											if (detailLayoutSection[j].columns == 1 && layoutComponents[m].displayLines > 1 && field.type=='textarea') {
												if (layoutItems[l].required == 'true') {
													divNum++;
													body += '\\n\\t\\t\\t\\t<apex:inputField value=\'\{\!Account.' + layoutComponents[m].value + '}\' required=\'' + layoutItems[l].required + '\' tabOrderHint=\'' + layoutComponents[m].tabOrder + '\' style=\'width:473px;height:50px;\' onkeypress=\'noenter(event)\' styleClass=\'reqClass\'>\\n\\t\\t\\t\\t\\t<apex:actionSupport event=\'onkeyup\' rerender=\'pg\'/>\\n\\t\\t\\t\\t\\t<div id=\'div' + divNum + '\' style=\'color:#d74c3b;display:none;\' class=\'errorMsg\'>Error: You must enter a value</div>\\n\\t\\t\\t\\t</apex:inputField>';
												} else {
													body += '\\n\\t\\t\\t\\t<apex:inputField value=\'\{\!Account.' + layoutComponents[m].value + '}\' required=\'' + layoutItems[l].required + '\' tabOrderHint=\'' + layoutComponents[m].tabOrder + '\' style=\'width:473px;height:50px;\' onkeypress=\'noenter(event)\'>\\n\\t\\t\\t\\t\\t<apex:actionSupport event=\'onkeyup\' rerender=\'pg\'/>\\n\\t\\t\\t\\t</apex:inputField>';
												}
											} else {
												if (layoutComponents[m].value == 'OwnerId') { 
													body += '\\n\\t\\t\\t\\t<apex:outputText value=\'\{\!ownerName}\' label=\'Account Owner\'/>'; 
												} else if (layoutComponents[m].value == 'RecordTypeId') { 
													body += '\\n\\t\\t\\t\\t<apex:outputfield value=\'\{\!Account.RecordTypeId'+ '}\' />'; 
												} else {
														if(field.type == 'picklist' || field.type == 'boolean' || field.type == 'datetime' || field.type == 'date'){
                                                            if (layoutItems[l].required == 'true') {
                                                                divNum++;
                                                                body += '\\n\\t\\t\\t\\t<apex:inputField value=\'\{\!Account.' + layoutComponents[m].value + '}\' required=\'' + layoutItems[l].required + '\' tabOrderHint=\'' + layoutComponents[m].tabOrder + '\' onkeypress=\'noenter(event)\' styleClass=\'reqClass\'>\\n\\t\\t\\t\\t\\t<apex:actionSupport event=\'onchange\' rerender=\'pg\'/>\\n\\t\\t\\t\\t\\t<div id=\'div' + divNum + '\' style=\'color:#d74c3b;display:none;\' class=\'errorMsg\'>Error: You must enter a value</div>\\n\\t\\t\\t\\t</apex:inputField>';
                                                            } else {
                                                                body += '\\n\\t\\t\\t\\t<apex:inputField value=\'\{\!Account.' + layoutComponents[m].value + '}\' required=\'' + layoutItems[l].required + '\' tabOrderHint=\'' + layoutComponents[m].tabOrder + '\' onkeypress=\'noenter(event)\'>\\n\\t\\t\\t\\t\\t<apex:actionSupport event=\'onchange\' rerender=\'pg\'/>\\n\\t\\t\\t\\t</apex:inputField>';
                                                            }
                                                   	    }
                                                   	else{												 
													    if (layoutItems[l].required == 'true') {
														  divNum++;
														body += '\\n\\t\\t\\t\\t<apex:inputField value=\'\{\!Account.' + layoutComponents[m].value + '}\' required=\'' + layoutItems[l].required + '\' tabOrderHint=\'' + layoutComponents[m].tabOrder + '\' onkeypress=\'noenter(event)\' styleClass=\'reqClass\'>\\n\\t\\t\\t\\t\\t<apex:actionSupport event=\'onkeyup\' rerender=\'pg\'/>\\n\\t\\t\\t\\t\\t<div id=\'div' + divNum + '\' style=\'color:#d74c3b;display:none;\' class=\'errorMsg\'>Error: You must enter a value</div>\\n\\t\\t\\t\\t</apex:inputField>';
													} else {
														body += '\\n\\t\\t\\t\\t<apex:inputField value=\'\{\!Account.' + layoutComponents[m].value + '}\' required=\'' + layoutItems[l].required + '\' tabOrderHint=\'' + layoutComponents[m].tabOrder + '\' onkeypress=\'noenter(event)\'>\\n\\t\\t\\t\\t\\t<apex:actionSupport event=\'onkeyup\' rerender=\'pg\'/>\\n\\t\\t\\t\\t</apex:inputField>';
													}
													}
												}
											}
										}
                                    } else {
                                        body += '\\n\\t\\t\\t\\t<apex:pageBlockSectionItem></apex:pageBlockSectionItem>';
                                    }
                                }
                            }
                        }
                    }
                }
                body += '\\n\\t\\t\\t</apex:pageBlockSection>';
            }
        }
        body += '\\n\\t\\t</apex:pageBlock>';
        console.log('#####: ' + body);
        var result = sforce.apex.execute("smartystreets.CreateResource", "CreatePage", {
            ObjectName: 'Account',
            pageBody: body,
            pageId: pgId,
            pageName: pageName
        });
        if (result == 'success') {
	    var loc;
	    if(sforce.console.isInConsole()){
	    	loc = '/apex/' + pageName + '?id={!Account.Id}&addrName=' + address+'&isdtp=vw';
	    } else {
		loc = '/apex/' + pageName + '?id={!Account.Id}&addrName=' + address;
	    }
            window.open(loc, '_self');
        } else {
			if(result=='Unable to Create Page'){
				alert(result);
			}
            window.location = window.location;
        }
    }
}
